version: "3.9"
services:
  database:
    container_name: interact-database
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - interact-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migrate:
    container_name: interact-migrate
    build:
      context: .
      dockerfile: dockerfiles/backend.prod.dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      database:
        condition: service_healthy
    command: [ "sh", "-c", "npm run generate && npm run migrate" ]
    restart: "no"

  backend:
    container_name: interact-backend
    build:
      context: .
      dockerfile: dockerfiles/backend.prod.dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=${PORT}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  frontend:
    container_name: interact-frontend
    build:
      context: .
      dockerfile: dockerfiles/frontend.prod.dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  interact-db-data: